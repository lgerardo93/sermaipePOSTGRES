/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.principal;

import db.conexion.ConexionPostgres;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JTextArea;

/**
 *
 * @author LGerardo
 */
public class Principal extends javax.swing.JFrame {
    private ConexionPostgres con;
    private DefaultTableModel tablaAux;
    private String idUsuario, idEmpleado, idCliente, idProveedor, idMaterial, idServicio, idPedido;
    private Boolean procesoCarga, eliminaReg;
    private Calendar calendario;
    
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.tabControl.setEnabledAt(0, true);
        this.tabControl.setEnabledAt(1, true);
        this.tabControl.setEnabledAt(2, true);
        this.tabControl.setEnabledAt(3, true);
        this.tabControl.setEnabledAt(4, true);
        this.tabControl.setEnabledAt(5, true);
        calendario = new GregorianCalendar();
        t_fechaPedido.setCalendar(calendario);
        t_fechaEntrega.setCalendar(calendario);
        t_fechaPedido.getDateEditor().setEnabled(false);
        t_fechaEntrega.getDateEditor().setEnabled(false);
        
        idUsuario = idEmpleado = idCliente = idProveedor = idMaterial = idServicio = idPedido = "";
        procesoCarga = eliminaReg = false;
        this.consultaUsuarios();
        this.consultaEmpleados();
        this.consultaClientes();
        this.consultaProveedores();
        this.consultaMateriales();
        this.consultaServicios();
        this.consultaPedidos();
        
        this.cargaProveedores();
        this.cargaEmpleados();
        this.cargaClientes();
        this.cargaMateriales();
        this.cargaServicios();
    }
    public void tipoAcceso(int tipoUsuario){
        switch(tipoUsuario)
        {
            case 1:
            break;
            case 2:
                this.tabControl.remove(5);
                this.tabControl.remove(4);
                this.tabControl.remove(0);
            break;
            case 3:
                this.tabControl.remove(3);
                this.tabControl.remove(2);
                this.tabControl.remove(1);
                this.tabControl.remove(0);
            break;
            default:
                this.tabControl.removeAll();
            break;
                
        }
        tabControl.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabControl = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        t_idUsuario = new javax.swing.JTextField();
        boton_limpiarJUsuarios = new javax.swing.JButton();
        boton_guardarUsuario = new javax.swing.JButton();
        boton_actualizarUsuario = new javax.swing.JButton();
        boton_eliminarUsuario = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        dataGridUsuarios = new javax.swing.JTable();
        t_privilegio = new javax.swing.JComboBox<>();
        jLabel57 = new javax.swing.JLabel();
        t_usuario = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        t_contrasena = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        t_idEmpleado = new javax.swing.JTextField();
        t_nombresEmpleado = new javax.swing.JTextField();
        t_coloniaEmpleado = new javax.swing.JTextField();
        t_telefonoEmpleado = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        t_apellidopEmpleado = new javax.swing.JTextField();
        t_calleEmpleado = new javax.swing.JTextField();
        t_celularEmpleado = new javax.swing.JTextField();
        boton_guardarEmpleado = new javax.swing.JButton();
        boton_actualizarEmpleado = new javax.swing.JButton();
        boton_eliminarEmpleado = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        t_apellidomEmpleado = new javax.swing.JTextField();
        t_numeroEmpleado = new javax.swing.JTextField();
        t_sueldoEmpleado = new javax.swing.JTextField();
        boton_limpiarJEmpleados = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataGridEmpleados = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        boton_guardarCliente = new javax.swing.JButton();
        boton_actualizarCliente = new javax.swing.JButton();
        boton_eliminarCliente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataGridClientes = new javax.swing.JTable();
        jLabel60 = new javax.swing.JLabel();
        t_idCliente = new javax.swing.JTextField();
        boton_limpiarJClientes = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        t_nombresCliente = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        t_apellidopCliente = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        t_apellidomCliente = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        t_calleCliente = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        t_numeroCliente = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        t_coloniaCliente = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        t_telefonoCliente = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        t_celularCliente = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        t_creditoCliente = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        boton_guardarProveedor = new javax.swing.JButton();
        boton_actualizarProveedor = new javax.swing.JButton();
        boton_eliminarProveedor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        dataGridProveedores = new javax.swing.JTable();
        jLabel72 = new javax.swing.JLabel();
        t_idProveedor = new javax.swing.JTextField();
        boton_limpiarJProveedores = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        t_nombresProveedor = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        t_apellidopProveedor = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        t_apellidomProveedor = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        t_calleProveedor = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        t_numeroProveedor = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        t_coloniaProveedor = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        t_telefonoProveedor = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        t_celularProveedor = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        t_emailProveedor = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dataGridMateriales = new javax.swing.JTable();
        jLabel46 = new javax.swing.JLabel();
        boton_limpiarJMateriales = new javax.swing.JButton();
        t_idMaterial = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        t_nombreProveedorMaterial = new javax.swing.JComboBox<>();
        t_idProveedorMaterial = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        t_nombreMaterial = new javax.swing.JTextField();
        t_precioCMaterial = new javax.swing.JTextField();
        t_descripcionMaterial = new javax.swing.JTextField();
        t_precioVMaterial = new javax.swing.JTextField();
        t_disponiblesMaterial = new javax.swing.JSpinner();
        boton_guardarMaterial = new javax.swing.JButton();
        boton_actualizarMaterial = new javax.swing.JButton();
        boton_eliminarMaterial = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dataGridServicios = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        dataGridEmpleadosServicio = new javax.swing.JTable();
        boton_limpiarJServicios = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        t_idServicio = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        t_tipoServicio = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        t_costoServicio = new javax.swing.JTextField();
        boton_guardarServicio = new javax.swing.JButton();
        boton_actualizarServicios = new javax.swing.JButton();
        boton_eliminarServicios = new javax.swing.JButton();
        boton_guardarEmpleadoServicio = new javax.swing.JButton();
        boton_eliminarEmpleadoServicio = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        t_idEmpleadoServicio = new javax.swing.JTextField();
        t_nombreEmpleadoServicio = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        t_descripcionServicio = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        t_idPedido = new javax.swing.JTextField();
        boton_limpiarJPedidos = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        t_idClientePedido = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        dataGridMaterialesPedido = new javax.swing.JTable();
        jLabel84 = new javax.swing.JLabel();
        t_fechaPedido = new com.toedter.calendar.JDateChooser();
        t_fechaEntrega = new com.toedter.calendar.JDateChooser();
        boton_generarPedido = new javax.swing.JButton();
        boton_eliminarPedido = new javax.swing.JButton();
        t_idMaterialPedido = new javax.swing.JTextField();
        t_descripcionMaterialPedido = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        t_cantidadMaterialPedido = new javax.swing.JSpinner();
        jScrollPane10 = new javax.swing.JScrollPane();
        dataGridPedidos = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        t_idServicioPedido = new javax.swing.JTextField();
        t_descripcionServicioPedido = new javax.swing.JComboBox<>();
        boton_agregarMaterialPedido = new javax.swing.JButton();
        boton_eliminarMaterialPedido = new javax.swing.JButton();
        boton_agregarServicioPedido = new javax.swing.JButton();
        boton_eliminarServicioPedido = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        dataGridServiciosPedido = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        t_totalPedido = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        t_nombreBusqueda = new javax.swing.JTextField();
        boton_buscarCliente = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        dataGridClientesPedido = new javax.swing.JTable();
        l_cerrarsesion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabControl.setName(""); // NOI18N

        jLabel56.setText("ID:");

        t_idUsuario.setEditable(false);
        t_idUsuario.setEnabled(false);

        boton_limpiarJUsuarios.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJUsuariosMouseClicked(evt);
            }
        });

        boton_guardarUsuario.setText("Guardar");
        boton_guardarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarUsuarioMouseClicked(evt);
            }
        });

        boton_actualizarUsuario.setText("Actualizar");
        boton_actualizarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarUsuarioMouseClicked(evt);
            }
        });

        boton_eliminarUsuario.setText("Eliminar");
        boton_eliminarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarUsuarioMouseClicked(evt);
            }
        });

        dataGridUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridUsuariosMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(dataGridUsuarios);

        t_privilegio.setMaximumRowCount(3);
        t_privilegio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GERENTE", "SUPERVISOR", "NORMAL" }));
        t_privilegio.setSelectedIndex(-1);
        t_privilegio.setToolTipText("");

        jLabel57.setText("USUARIO:");

        jLabel58.setText("CONTRASEÑA:");

        jLabel59.setText("PRIVILEGIO:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(boton_guardarUsuario)
                        .addGap(51, 51, 51)
                        .addComponent(boton_actualizarUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(boton_eliminarUsuario))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(t_privilegio, javax.swing.GroupLayout.Alignment.TRAILING, 0, 182, Short.MAX_VALUE)
                                .addComponent(t_contrasena, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(47, 47, 47))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(t_idUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(boton_limpiarJUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(0, 8, Short.MAX_VALUE)
                                    .addComponent(t_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(554, 554, 554))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_idUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(boton_limpiarJUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_privilegio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_guardarUsuario)
                    .addComponent(boton_actualizarUsuario)
                    .addComponent(boton_eliminarUsuario))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );

        tabControl.addTab("Usuarios", jPanel1);

        jLabel19.setText("ID:");

        jLabel20.setText("NOMBRE(S):");

        jLabel21.setText("COLONIA:");

        jLabel22.setText("TELEFONO:");

        jLabel23.setText("(7 DIGITOS)");

        t_idEmpleado.setEditable(false);
        t_idEmpleado.setEnabled(false);

        t_telefonoEmpleado.setColumns(7);
        t_telefonoEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_telefonoEmpleadoKeyTyped(evt);
            }
        });

        jLabel24.setText("APELLIDO PATERNO:");

        jLabel25.setText("CALLE:");

        jLabel26.setText("CELULAR:");

        jLabel27.setText("(10 DIGITOS)");

        t_celularEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_celularEmpleadoKeyTyped(evt);
            }
        });

        boton_guardarEmpleado.setText("Guardar");
        boton_guardarEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarEmpleadoMouseClicked(evt);
            }
        });

        boton_actualizarEmpleado.setText("Actualizar");
        boton_actualizarEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarEmpleadoMouseClicked(evt);
            }
        });

        boton_eliminarEmpleado.setText("Eliminar");
        boton_eliminarEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarEmpleadoMouseClicked(evt);
            }
        });

        jLabel6.setText("APELLIDO MATERNO:");

        jLabel7.setText("NUMERO:");

        jLabel8.setText("SUELDO:");

        boton_limpiarJEmpleados.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJEmpleados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJEmpleadosMouseClicked(evt);
            }
        });

        dataGridEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataGridEmpleados);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(boton_guardarEmpleado)
                .addGap(76, 76, 76)
                .addComponent(boton_actualizarEmpleado)
                .addGap(71, 71, 71)
                .addComponent(boton_eliminarEmpleado)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel25)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(t_idEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(boton_limpiarJEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33))
                                    .addComponent(t_nombresEmpleado, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(t_telefonoEmpleado)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(t_calleEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel23))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_numeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel21)
                                .addGap(17, 17, 17)
                                .addComponent(t_coloniaEmpleado))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_apellidopEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_apellidomEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_celularEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_sueldoEmpleado))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel27)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(185, 185, 185))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_idEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(boton_limpiarJEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(t_nombresEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(t_calleEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(t_numeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(t_coloniaEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_telefonoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(t_celularEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(t_sueldoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel27))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boton_eliminarEmpleado)
                            .addComponent(boton_actualizarEmpleado)
                            .addComponent(boton_guardarEmpleado)))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(t_apellidopEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(t_apellidomEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 899, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabControl.addTab("Empleados", jPanel2);

        boton_guardarCliente.setText("Guardar");
        boton_guardarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarClienteMouseClicked(evt);
            }
        });

        boton_actualizarCliente.setText("Actualizar");
        boton_actualizarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarClienteMouseClicked(evt);
            }
        });

        boton_eliminarCliente.setText("Eliminar");
        boton_eliminarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarClienteMouseClicked(evt);
            }
        });

        dataGridClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dataGridClientes);

        jLabel60.setText("ID:");

        t_idCliente.setEditable(false);
        t_idCliente.setEnabled(false);

        boton_limpiarJClientes.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJClientesMouseClicked(evt);
            }
        });

        jLabel61.setText("NOMBRE(S):");

        jLabel62.setText("APELLIDO PATERNO:");

        jLabel63.setText("APELLIDO MATERNO:");

        jLabel64.setText("CALLE:");

        jLabel65.setText("NUMERO:");

        jLabel66.setText("COLONIA:");

        jLabel67.setText("TELEFONO:");

        jLabel68.setText("(7 DIGITOS)");

        t_telefonoCliente.setColumns(7);
        t_telefonoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_telefonoClienteKeyTyped(evt);
            }
        });

        jLabel69.setText("CELULAR:");

        jLabel70.setText("(10 DIGITOS)");

        t_celularCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_celularClienteKeyTyped(evt);
            }
        });

        jLabel71.setText("CREDITO:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(boton_guardarCliente)
                .addGap(26, 26, 26)
                .addComponent(boton_actualizarCliente)
                .addGap(34, 34, 34)
                .addComponent(boton_eliminarCliente)
                .addContainerGap(372, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel60)
                                        .addComponent(jLabel61)
                                        .addComponent(jLabel64)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(t_idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(boton_limpiarJClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33))
                                    .addComponent(t_nombresCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(t_telefonoCliente)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(t_calleCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel68))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_numeroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel66)
                                .addGap(17, 17, 17)
                                .addComponent(t_coloniaCliente))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_apellidopCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel63)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_apellidomCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel69)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_celularCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_creditoCliente))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel70)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(36, 36, 36))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(boton_limpiarJClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel61)
                            .addComponent(t_nombresCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(t_calleCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel65)
                            .addComponent(t_numeroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel66)
                            .addComponent(t_coloniaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_telefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel69)
                            .addComponent(t_celularCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel71)
                            .addComponent(t_creditoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel68)
                            .addComponent(jLabel70)))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel62)
                        .addComponent(t_apellidopCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel63)
                        .addComponent(t_apellidomCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_actualizarCliente)
                    .addComponent(boton_guardarCliente)
                    .addComponent(boton_eliminarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabControl.addTab("Clientes", jPanel3);

        boton_guardarProveedor.setText("Guardar");
        boton_guardarProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarProveedorMouseClicked(evt);
            }
        });

        boton_actualizarProveedor.setText("Actualizar");
        boton_actualizarProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarProveedorMouseClicked(evt);
            }
        });

        boton_eliminarProveedor.setText("Eliminar");
        boton_eliminarProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarProveedorMouseClicked(evt);
            }
        });

        dataGridProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridProveedoresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(dataGridProveedores);

        jLabel72.setText("ID:");

        t_idProveedor.setEditable(false);
        t_idProveedor.setEnabled(false);

        boton_limpiarJProveedores.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJProveedoresMouseClicked(evt);
            }
        });

        jLabel73.setText("NOMBRE(S):");

        jLabel74.setText("APELLIDO PATERNO:");

        jLabel75.setText("APELLIDO MATERNO:");

        jLabel76.setText("CALLE:");

        jLabel77.setText("NUMERO:");

        jLabel78.setText("COLONIA:");

        jLabel79.setText("TELEFONO:");

        jLabel80.setText("(7 DIGITOS)");

        t_telefonoProveedor.setColumns(7);
        t_telefonoProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_telefonoProveedorKeyTyped(evt);
            }
        });

        jLabel81.setText("CELULAR:");

        jLabel82.setText("(10 DIGITOS)");

        t_celularProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_celularProveedorKeyTyped(evt);
            }
        });

        jLabel83.setText("EMAIL:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(boton_guardarProveedor)
                .addGap(26, 26, 26)
                .addComponent(boton_actualizarProveedor)
                .addGap(34, 34, 34)
                .addComponent(boton_eliminarProveedor)
                .addContainerGap(358, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel72)
                                        .addComponent(jLabel73)
                                        .addComponent(jLabel76)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(t_idProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(boton_limpiarJProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33))
                                    .addComponent(t_nombresProveedor, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(t_telefonoProveedor)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(t_calleProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel80))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel77)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_numeroProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel78)
                                .addGap(17, 17, 17)
                                .addComponent(t_coloniaProveedor))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel74)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_apellidopProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel75)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_apellidomProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel81)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_celularProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_emailProveedor))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel82)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_idProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel72))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(boton_limpiarJProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel73)
                            .addComponent(t_nombresProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel76)
                            .addComponent(t_calleProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77)
                            .addComponent(t_numeroProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel78)
                            .addComponent(t_coloniaProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_telefonoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel81)
                            .addComponent(t_celularProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel83)
                            .addComponent(t_emailProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel80)
                            .addComponent(jLabel82)))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel74)
                        .addComponent(t_apellidopProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel75)
                        .addComponent(t_apellidomProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_actualizarProveedor)
                    .addComponent(boton_guardarProveedor)
                    .addComponent(boton_eliminarProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabControl.addTab("Proveedores", jPanel4);

        dataGridMateriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridMateriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridMaterialesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(dataGridMateriales);

        jLabel46.setText("ID:");

        boton_limpiarJMateriales.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJMateriales.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJMateriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJMaterialesMouseClicked(evt);
            }
        });

        t_idMaterial.setEditable(false);
        t_idMaterial.setEnabled(false);

        jLabel1.setText("PROVEEDOR:");

        t_nombreProveedorMaterial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t_nombreProveedorMaterialItemStateChanged(evt);
            }
        });

        t_idProveedorMaterial.setEditable(false);
        t_idProveedorMaterial.setEnabled(false);

        jLabel2.setText("NOMBRE:");

        jLabel3.setText("PRECIO COMPRA:");

        jLabel4.setText("DESCRIPCION:");

        jLabel5.setText("PRECIO VENTA:");

        jLabel15.setText("DISPONIBLES:");

        t_disponiblesMaterial.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        boton_guardarMaterial.setText("Guardar");
        boton_guardarMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarMaterialMouseClicked(evt);
            }
        });

        boton_actualizarMaterial.setText("Actualizar");
        boton_actualizarMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarMaterialMouseClicked(evt);
            }
        });

        boton_eliminarMaterial.setText("Eliminar");
        boton_eliminarMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarMaterialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(t_precioCMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(t_precioVMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(t_disponiblesMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(t_nombreMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4))
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                                        .addComponent(t_idMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(boton_limpiarJMateriales, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                                        .addComponent(t_idProveedorMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(t_nombreProveedorMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(3, 3, 3)
                                        .addComponent(t_descripcionMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(261, 261, 261)
                                .addComponent(boton_guardarMaterial)
                                .addGap(38, 38, 38)
                                .addComponent(boton_actualizarMaterial)
                                .addGap(32, 32, 32)
                                .addComponent(boton_eliminarMaterial)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(t_idMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boton_limpiarJMateriales, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_nombreProveedorMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_idProveedorMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_nombreMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(t_descripcionMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(t_precioCMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(t_precioVMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(t_disponiblesMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_guardarMaterial)
                    .addComponent(boton_actualizarMaterial)
                    .addComponent(boton_eliminarMaterial))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        tabControl.addTab("Materiales", jPanel5);

        dataGridServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridServiciosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(dataGridServicios);

        dataGridEmpleadosServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridEmpleadosServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridEmpleadosServicioMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(dataGridEmpleadosServicio);

        boton_limpiarJServicios.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJServicios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJServiciosMouseClicked(evt);
            }
        });

        jLabel47.setText("ID:");

        t_idServicio.setEditable(false);
        t_idServicio.setEnabled(false);

        jLabel16.setText("TIPO SERVICIO:");

        t_tipoServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "INSTALACIÓN", "REPARACIÓN", "MANTENIMIENTO" }));
        t_tipoServicio.setSelectedIndex(-1);

        jLabel17.setText("DESCRIPCION:");

        jLabel18.setText("COSTO:");

        boton_guardarServicio.setText("Guardar");
        boton_guardarServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarServicioMouseClicked(evt);
            }
        });

        boton_actualizarServicios.setText("Actualizar");
        boton_actualizarServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_actualizarServiciosMouseClicked(evt);
            }
        });

        boton_eliminarServicios.setText("Eliminar");
        boton_eliminarServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarServiciosMouseClicked(evt);
            }
        });

        boton_guardarEmpleadoServicio.setText("Agregar");
        boton_guardarEmpleadoServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_guardarEmpleadoServicioMouseClicked(evt);
            }
        });

        boton_eliminarEmpleadoServicio.setText("Eliminar");
        boton_eliminarEmpleadoServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarEmpleadoServicioMouseClicked(evt);
            }
        });

        jLabel48.setText("EMPLEADO:");

        t_idEmpleadoServicio.setEditable(false);
        t_idEmpleadoServicio.setEnabled(false);

        t_nombreEmpleadoServicio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t_nombreEmpleadoServicioItemStateChanged(evt);
            }
        });

        t_descripcionServicio.setColumns(20);
        t_descripcionServicio.setRows(5);
        t_descripcionServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_descripcionServicioKeyTyped(evt);
            }
        });
        jScrollPane9.setViewportView(t_descripcionServicio);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(35, 35, 35)
                                    .addComponent(jLabel16))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                    .addGap(86, 86, 86)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(t_idServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(172, 172, 172)
                                    .addComponent(boton_limpiarJServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(t_tipoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(76, 76, 76)
                                    .addComponent(boton_guardarServicio)
                                    .addGap(32, 32, 32)
                                    .addComponent(boton_actualizarServicios)
                                    .addGap(36, 36, 36)
                                    .addComponent(boton_eliminarServicios))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(75, 75, 75)
                                    .addComponent(jLabel18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(t_costoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(51, 51, 51))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_idEmpleadoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(t_nombreEmpleadoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(boton_guardarEmpleadoServicio)
                                .addGap(63, 63, 63)
                                .addComponent(boton_eliminarEmpleadoServicio)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(t_idServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boton_limpiarJServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(t_tipoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel17)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(t_costoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boton_guardarServicio)
                            .addComponent(boton_actualizarServicios)
                            .addComponent(boton_eliminarServicios))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(t_idEmpleadoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_nombreEmpleadoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boton_eliminarEmpleadoServicio)
                            .addComponent(boton_guardarEmpleadoServicio))
                        .addGap(28, 28, 28)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tabControl.addTab("Servicios", jPanel6);

        jLabel49.setText("ID PEDIDO:");

        t_idPedido.setEditable(false);
        t_idPedido.setEnabled(false);

        boton_limpiarJPedidos.setBackground(new java.awt.Color(255, 255, 255));
        boton_limpiarJPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/principal/img.png"))); // NOI18N
        boton_limpiarJPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_limpiarJPedidosMouseClicked(evt);
            }
        });

        jLabel50.setText("ID CLIENTE:");

        t_idClientePedido.setEditable(false);
        t_idClientePedido.setEnabled(false);

        jLabel52.setText("FECHA PEDIDO:");

        dataGridMaterialesPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridMaterialesPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridMaterialesPedidoMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(dataGridMaterialesPedido);

        jLabel84.setText("FECHA ENTREGA:");

        boton_generarPedido.setText("Generar");
        boton_generarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_generarPedidoMouseClicked(evt);
            }
        });

        boton_eliminarPedido.setText("Eliminar");
        boton_eliminarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarPedidoMouseClicked(evt);
            }
        });

        t_idMaterialPedido.setEditable(false);
        t_idMaterialPedido.setEnabled(false);

        t_descripcionMaterialPedido.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t_descripcionMaterialPedidoItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("MATERIALES");

        jLabel10.setText("CANTIDAD:");

        t_cantidadMaterialPedido.setModel(new javax.swing.SpinnerNumberModel());

        dataGridPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridPedidosMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(dataGridPedidos);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("SERVICIOS");

        t_idServicioPedido.setEditable(false);
        t_idServicioPedido.setEnabled(false);

        t_descripcionServicioPedido.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t_descripcionServicioPedidoItemStateChanged(evt);
            }
        });

        boton_agregarMaterialPedido.setText("Agregar");
        boton_agregarMaterialPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_agregarMaterialPedidoMouseClicked(evt);
            }
        });

        boton_eliminarMaterialPedido.setText("Eliminar");
        boton_eliminarMaterialPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarMaterialPedidoMouseClicked(evt);
            }
        });

        boton_agregarServicioPedido.setText("Agregar");
        boton_agregarServicioPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_agregarServicioPedidoMouseClicked(evt);
            }
        });

        boton_eliminarServicioPedido.setText("Eliminar");
        boton_eliminarServicioPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_eliminarServicioPedidoMouseClicked(evt);
            }
        });

        dataGridServiciosPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridServiciosPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridServiciosPedidoMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(dataGridServiciosPedido);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("TOTAL:");

        t_totalPedido.setEditable(false);
        t_totalPedido.setForeground(new java.awt.Color(255, 0, 51));
        t_totalPedido.setText("0");
        t_totalPedido.setEnabled(false);

        jLabel13.setText("NOMBRE DEL CLIENTE: ");

        t_nombreBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nombreBusquedaKeyTyped(evt);
            }
        });

        boton_buscarCliente.setLabel("Buscar");
        boton_buscarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_buscarClienteMouseClicked(evt);
            }
        });

        dataGridClientesPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataGridClientesPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataGridClientesPedidoMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(dataGridClientesPedido);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(180, 180, 180))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(boton_agregarMaterialPedido)
                                .addGap(53, 53, 53)
                                .addComponent(boton_eliminarMaterialPedido)
                                .addGap(25, 25, 25))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(t_idMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t_descripcionMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)))
                        .addGap(18, 18, 18)
                        .addComponent(t_cantidadMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_idServicioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(boton_agregarServicioPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(boton_eliminarServicioPedido))
                            .addComponent(t_descripcionServicioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(278, 278, 278)
                                .addComponent(boton_generarPedido)
                                .addGap(111, 111, 111)
                                .addComponent(boton_eliminarPedido)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel52)
                                    .addComponent(jLabel84))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t_fechaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_fechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_totalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel49)
                                .addGap(18, 18, 18)
                                .addComponent(t_idPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel50)
                                            .addComponent(jLabel13))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(t_idClientePedido, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(88, 88, 88)
                                                .addComponent(boton_limpiarJPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(t_nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(boton_buscarCliente)
                                        .addGap(123, 123, 123)))
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(boton_limpiarJPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(t_idClientePedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel50))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(t_nombreBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(boton_buscarCliente))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel52)
                        .addComponent(jLabel49)
                        .addComponent(t_idPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(t_fechaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel84)
                            .addComponent(t_fechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(t_totalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_generarPedido, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boton_eliminarPedido, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_descripcionMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_idMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(t_cantidadMaterialPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_descripcionServicioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_idServicioPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(boton_eliminarMaterialPedido)
                                .addComponent(boton_agregarMaterialPedido, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(boton_eliminarServicioPedido)
                                .addComponent(boton_agregarServicioPedido)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        t_nombreBusqueda.getAccessibleContext().setAccessibleName("t_nombreBusqueda");
        boton_buscarCliente.getAccessibleContext().setAccessibleName("btoton_buscar");

        tabControl.addTab("Pedidos", jPanel7);

        l_cerrarsesion.setText("Cerrar sesión");
        l_cerrarsesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_cerrarsesionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabControl, javax.swing.GroupLayout.PREFERRED_SIZE, 890, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l_cerrarsesion)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_cerrarsesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabControl, javax.swing.GroupLayout.PREFERRED_SIZE, 621, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabControl.getAccessibleContext().setAccessibleName("tabControl");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void l_cerrarsesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_cerrarsesionMouseClicked
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_l_cerrarsesionMouseClicked
    /** 
     * 
     * USUARIOS 
     *
     */
    private void boton_limpiarJUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJUsuariosMouseClicked
        this.limpiarJUsuarios();
    }//GEN-LAST:event_boton_limpiarJUsuariosMouseClicked
    private void limpiarJUsuarios(){
        this.idUsuario = "";
        this.t_idUsuario.setText("");
        this.t_usuario.setText("");
        this.t_contrasena.setText("");
        this.t_privilegio.setSelectedIndex(-1);
    }
    private void boton_guardarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarUsuarioMouseClicked
        String usuario, contrasena, privilegio;
        if (idUsuario == "")
            if (validaCamposUsuarios())
            {
                con = new ConexionPostgres();
                try{
                    usuario = this.t_usuario.getText();
                    contrasena = this.t_contrasena.getText();
                    privilegio = String.valueOf(this.t_privilegio.getSelectedItem());
                    this.con.insertaUsuario(usuario, contrasena, privilegio);
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaUsuarios();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarUsuarioMouseClicked
    private void consultaUsuarios(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT * FROM PERSONA.USUARIO");
            this.dataGridUsuarios.setModel(tablaAux);
            this.limpiarJUsuarios();
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void boton_actualizarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarUsuarioMouseClicked
        String usuario, contrasena, privilegio;
        if (idUsuario != "")
            if (validaCamposUsuarios())
            {
                con = new ConexionPostgres();
                try{
                    usuario = this.t_usuario.getText();
                    contrasena = this.t_contrasena.getText();
                    privilegio = String.valueOf(this.t_privilegio.getSelectedItem());
                    this.con.actualizaUsuario(idUsuario, usuario, contrasena, privilegio);
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaUsuarios();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarUsuarioMouseClicked
    private void boton_eliminarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarUsuarioMouseClicked
        if (idUsuario != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaUsuario(idUsuario);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaUsuarios();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarUsuarioMouseClicked
    private void dataGridUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridUsuariosMouseClicked
        this.t_idUsuario.setText(this.dataGridUsuarios.getValueAt(this.dataGridUsuarios.getSelectedRow(), 0).toString());
        this.t_usuario.setText(this.dataGridUsuarios.getValueAt(this.dataGridUsuarios.getSelectedRow(), 1).toString());
        this.t_contrasena.setText(this.dataGridUsuarios.getValueAt(this.dataGridUsuarios.getSelectedRow(), 2).toString());
        this.t_privilegio.setSelectedItem(this.dataGridUsuarios.getValueAt(this.dataGridUsuarios.getSelectedRow(), 3).toString());
        this.idUsuario = t_idUsuario.getText();
    }//GEN-LAST:event_dataGridUsuariosMouseClicked
    /**
     * 
     * EMPLEADOS 
     * 
     */
    private void boton_limpiarJEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJEmpleadosMouseClicked
        this.limpiarJEmpleados();
    }//GEN-LAST:event_boton_limpiarJEmpleadosMouseClicked
    private void limpiarJEmpleados(){
        this.idEmpleado = "";
        this.t_idEmpleado.setText("");
        this.t_nombresEmpleado.setText("");
        this.t_apellidopEmpleado.setText("");
        this.t_apellidomEmpleado.setText("");
        this.t_coloniaEmpleado.setText("");
        this.t_calleEmpleado.setText("");
        this.t_numeroEmpleado.setText("");
        this.t_telefonoEmpleado.setText("");
        this.t_celularEmpleado.setText("");
        this.t_sueldoEmpleado.setText("");
    }
    private void consultaEmpleados(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT * FROM PERSONA.EMPLEADO");
            this.dataGridEmpleados.setModel(tablaAux);
            this.limpiarJEmpleados();
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void boton_guardarEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarEmpleadoMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, sueldo;
        if (idEmpleado == "")
            if (validaCamposEmpleados())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresEmpleado.getText();
                    apellidop = this.t_apellidopEmpleado.getText();
                    apellidom = this.t_apellidomEmpleado.getText();
                    domicilio = this.t_calleEmpleado.getText() + '_' + this.t_numeroEmpleado.getText() + '_' + this.t_coloniaEmpleado.getText();
                    telefono = this.t_telefonoEmpleado.getText();
                    celular = this.t_celularEmpleado.getText();
                    sueldo = this.t_sueldoEmpleado.getText();
                    this.con.insertaEmpleado(nombres, apellidop, apellidom, domicilio, telefono, celular, Float.parseFloat(sueldo));
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaEmpleados();
                this.cargaEmpleados();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarEmpleadoMouseClicked
    private void boton_actualizarEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarEmpleadoMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, sueldo;
        if (idEmpleado != "")
            if (validaCamposEmpleados())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresEmpleado.getText();
                    apellidop = this.t_apellidopEmpleado.getText();
                    apellidom = this.t_apellidomEmpleado.getText();
                    domicilio = this.t_calleEmpleado.getText() + '_' + this.t_numeroEmpleado.getText() + '_' + this.t_coloniaEmpleado.getText();
                    telefono = this.t_telefonoEmpleado.getText();
                    celular = this.t_celularEmpleado.getText();
                    sueldo = this.t_sueldoEmpleado.getText();
                    this.con.actualizaEmpleado(idEmpleado, nombres, apellidop, apellidom, domicilio, telefono, celular, Float.parseFloat(sueldo));
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaEmpleados();
                this.cargaEmpleados();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarEmpleadoMouseClicked
    private void boton_eliminarEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarEmpleadoMouseClicked
        if (idEmpleado != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaEmpleado(idEmpleado);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaEmpleados();
            this.cargaEmpleados();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarEmpleadoMouseClicked
    private void dataGridEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridEmpleadosMouseClicked
        String[] domicilio = this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 4).toString().split("_");
        this.t_idEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 0).toString());
        this.t_nombresEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 1).toString());
        this.t_apellidopEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 2).toString());
        this.t_apellidomEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 3).toString());
        this.t_calleEmpleado.setText(domicilio[0]);
        this.t_numeroEmpleado.setText(domicilio[1]);
        this.t_coloniaEmpleado.setText(domicilio[2]);
        this.t_telefonoEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 5).toString());
        this.t_celularEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 6).toString());
        this.t_sueldoEmpleado.setText(this.dataGridEmpleados.getValueAt(this.dataGridEmpleados.getSelectedRow(), 7).toString());
        this.idEmpleado = t_idEmpleado.getText();
    }//GEN-LAST:event_dataGridEmpleadosMouseClicked
    private void t_telefonoEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_telefonoEmpleadoKeyTyped
        this.validaTamanoCampo(this.t_telefonoEmpleado, evt, 7);
    }//GEN-LAST:event_t_telefonoEmpleadoKeyTyped
    private void t_celularEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_celularEmpleadoKeyTyped
        this.validaTamanoCampo(this.t_celularEmpleado, evt, 10);
    }//GEN-LAST:event_t_celularEmpleadoKeyTyped
    /** 
     *
     * CLIENTES
     * 
     */
    private void boton_limpiarJClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJClientesMouseClicked
        this.limpiarJClientes();
    }//GEN-LAST:event_boton_limpiarJClientesMouseClicked
    private void boton_guardarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarClienteMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, credito;
        if (idCliente == "")
            if (validaCamposClientes())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresCliente.getText();
                    apellidop = this.t_apellidopCliente.getText();
                    apellidom = this.t_apellidomCliente.getText();
                    domicilio = this.t_calleCliente.getText() + '_' + this.t_numeroCliente.getText() + '_' + this.t_coloniaCliente.getText();
                    telefono = this.t_telefonoCliente.getText();
                    celular = this.t_celularCliente.getText();
                    credito = this.t_creditoCliente.getText();
                    this.con.insertaCliente(nombres, apellidop, apellidom, domicilio, telefono, celular, Float.parseFloat(credito));
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaClientes();
                this.cargaClientes();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarClienteMouseClicked
    private void dataGridClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridClientesMouseClicked
        String[] domicilio = this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 4).toString().split("_");
        this.t_idCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 0).toString());
        this.t_nombresCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 1).toString());
        this.t_apellidopCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 2).toString());
        this.t_apellidomCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 3).toString());
        this.t_calleCliente.setText(domicilio[0]);
        this.t_numeroCliente.setText(domicilio[1]);
        this.t_coloniaCliente.setText(domicilio[2]);
        this.t_telefonoCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 5).toString());
        this.t_celularCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 6).toString());
        this.t_creditoCliente.setText(this.dataGridClientes.getValueAt(this.dataGridClientes.getSelectedRow(), 7).toString());
        this.idCliente = t_idCliente.getText();
    }//GEN-LAST:event_dataGridClientesMouseClicked
    private void t_telefonoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_telefonoClienteKeyTyped
        this.validaTamanoCampo(this.t_telefonoCliente, evt, 7);
    }//GEN-LAST:event_t_telefonoClienteKeyTyped
    private void t_celularClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_celularClienteKeyTyped
        this.validaTamanoCampo(this.t_celularCliente, evt, 10);
    }//GEN-LAST:event_t_celularClienteKeyTyped
    private void boton_actualizarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarClienteMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, credito;
        if (idCliente != "")
            if (validaCamposClientes())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresCliente.getText();
                    apellidop = this.t_apellidopCliente.getText();
                    apellidom = this.t_apellidomCliente.getText();
                    domicilio = this.t_calleCliente.getText() + '_' + this.t_numeroCliente.getText() + '_' + this.t_coloniaCliente.getText();
                    telefono = this.t_telefonoCliente.getText();
                    celular = this.t_celularCliente.getText();
                    credito = this.t_creditoCliente.getText();
                    this.con.actualizaCliente(idCliente, nombres, apellidop, apellidom, domicilio, telefono, celular, Float.parseFloat(credito));
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaClientes();
                this.cargaClientes();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarClienteMouseClicked
    private void boton_eliminarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarClienteMouseClicked
        if (idCliente != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaCliente(idCliente);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaClientes();
            this.cargaClientes();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarClienteMouseClicked
    private void limpiarJClientes(){
        this.idCliente = "";
        this.t_idCliente.setText("");
        this.t_nombresCliente.setText("");
        this.t_apellidopCliente.setText("");
        this.t_apellidomCliente.setText("");
        this.t_coloniaCliente.setText("");
        this.t_calleCliente.setText("");
        this.t_numeroCliente.setText("");
        this.t_telefonoCliente.setText("");
        this.t_celularCliente.setText("");
        this.t_creditoCliente.setText("");
    }
    private void consultaClientes(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT * FROM PERSONA.CLIENTE");
            this.dataGridClientes.setModel(tablaAux);
            this.limpiarJClientes();
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
    *
    * PROVEEDORES
    * 
    */
    private void boton_limpiarJProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJProveedoresMouseClicked
        this.limpiarJProveedores();
    }//GEN-LAST:event_boton_limpiarJProveedoresMouseClicked
    private void t_telefonoProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_telefonoProveedorKeyTyped
        this.validaTamanoCampo(this.t_telefonoProveedor, evt, 7);
    }//GEN-LAST:event_t_telefonoProveedorKeyTyped
    private void t_celularProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_celularProveedorKeyTyped
        this.validaTamanoCampo(this.t_celularProveedor, evt, 10);
    }//GEN-LAST:event_t_celularProveedorKeyTyped
    private void dataGridProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridProveedoresMouseClicked
        String[] domicilio = this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 4).toString().split("_");
        this.t_idProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 0).toString());
        this.t_nombresProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 1).toString());
        this.t_apellidopProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 2).toString());
        this.t_apellidomProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 3).toString());
        this.t_calleProveedor.setText(domicilio[0]);
        this.t_numeroProveedor.setText(domicilio[1]);
        this.t_coloniaProveedor.setText(domicilio[2]);
        this.t_telefonoProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 5).toString());
        this.t_celularProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 6).toString());
        this.t_emailProveedor.setText(this.dataGridProveedores.getValueAt(this.dataGridProveedores.getSelectedRow(), 7).toString());
        this.idProveedor = t_idProveedor.getText();
    }//GEN-LAST:event_dataGridProveedoresMouseClicked
    private void boton_guardarProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarProveedorMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, email;
        if (idProveedor == "")
            if (validaCamposProveedores())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresProveedor.getText();
                    apellidop = this.t_apellidopProveedor.getText();
                    apellidom = this.t_apellidomProveedor.getText();
                    domicilio = this.t_calleProveedor.getText() + '_' + this.t_numeroProveedor.getText() + '_' + this.t_coloniaProveedor.getText();
                    telefono = this.t_telefonoProveedor.getText();
                    celular = this.t_celularProveedor.getText();
                    email = this.t_emailProveedor.getText();
                    this.con.insertaProveedor(nombres, apellidop, apellidom, domicilio, telefono, celular, email);
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaProveedores();
                this.cargaProveedores();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarProveedorMouseClicked
    private void boton_actualizarProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarProveedorMouseClicked
        String nombres, apellidop, apellidom, domicilio, telefono, celular, email;
        if (idProveedor != "")
            if (validaCamposProveedores())
            {
                con = new ConexionPostgres();
                try{
                    nombres = this.t_nombresProveedor.getText();
                    apellidop = this.t_apellidopProveedor.getText();
                    apellidom = this.t_apellidomProveedor.getText();
                    domicilio = this.t_calleProveedor.getText() + '_' + this.t_numeroProveedor.getText() + '_' + this.t_coloniaProveedor.getText();
                    telefono = this.t_telefonoProveedor.getText();
                    celular = this.t_celularProveedor.getText();
                    email = this.t_emailProveedor.getText();
                    this.con.actualizaProveedor(idProveedor, nombres, apellidop, apellidom, domicilio, telefono, celular, email);
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaProveedores();
                this.cargaProveedores();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarProveedorMouseClicked
    private void boton_eliminarProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarProveedorMouseClicked
        if (idProveedor != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaProveedor(idProveedor);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaProveedores();
            this.cargaProveedores();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarProveedorMouseClicked
    private void limpiarJProveedores(){
        this.idProveedor = "";
        this.t_idProveedor.setText("");
        this.t_nombresProveedor.setText("");
        this.t_apellidopProveedor.setText("");
        this.t_apellidomProveedor.setText("");
        this.t_coloniaProveedor.setText("");
        this.t_calleProveedor.setText("");
        this.t_numeroProveedor.setText("");
        this.t_telefonoProveedor.setText("");
        this.t_celularProveedor.setText("");
        this.t_emailProveedor.setText("");
    }
    private void consultaProveedores(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT * FROM PERSONA.PROVEEDOR");
            this.dataGridProveedores.setModel(tablaAux);
            this.limpiarJProveedores();
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    /** 
     * 
     * MATERIALES 
     * 
     * /
    /**Este método cargará los proveedores en el control de materiales para seleccionar proveedores*/
    private void cargaProveedores() {
        List<String> nombreProveedores = new ArrayList<String>();
        this.t_nombreProveedorMaterial.removeAllItems();
        procesoCarga = true;
        try{
            con = new ConexionPostgres();
            nombreProveedores = con.listaRegistros("concat(nombres, '_' ,apellidop, '_', apellidom)","proveedor","PERSONA","PROVEEDOR");
            for(String nombre : nombreProveedores)
                this.t_nombreProveedorMaterial.addItem(nombre);
            this.t_nombreProveedorMaterial.setSelectedIndex(-1);
            this.t_idProveedorMaterial.setText("");
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        procesoCarga = false;
    }
    private void limpiarJMateriales(){
        this.idMaterial = "";
        this.t_idMaterial.setText("");
        this.t_idProveedorMaterial.setText("");
        this.t_nombreProveedorMaterial.setSelectedIndex(-1);
        this.t_nombreMaterial.setText("");
        this.t_descripcionMaterial.setText("");
        this.t_precioCMaterial.setText("");
        this.t_precioVMaterial.setText("");
        this.t_disponiblesMaterial.setValue(0);
    }
    private void t_nombreProveedorMaterialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t_nombreProveedorMaterialItemStateChanged
        String idprov="";
        if(!procesoCarga && evt.getStateChange()==1)
        {
            try{
                con = new ConexionPostgres();
                idprov = con.idPersona("idproveedor","PROVEEDOR",this.t_nombreProveedorMaterial.getSelectedItem().toString());
                this.t_idProveedorMaterial.setText(idprov);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_t_nombreProveedorMaterialItemStateChanged
    private void boton_limpiarJMaterialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJMaterialesMouseClicked
        this.limpiarJMateriales();
    }//GEN-LAST:event_boton_limpiarJMaterialesMouseClicked
    private void dataGridMaterialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridMaterialesMouseClicked
        String nombrecompleto="";
        this.t_idMaterial.setText(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 0).toString());
        this.t_nombreProveedorMaterial.setSelectedItem(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 1).toString());
        this.t_nombreMaterial.setText(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 2).toString());
        this.t_descripcionMaterial.setText(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 3).toString());
        this.t_disponiblesMaterial.setValue(Integer.parseInt(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 4).toString()));
        this.t_precioVMaterial.setText(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 5).toString());
        this.t_precioCMaterial.setText(this.dataGridMateriales.getValueAt(this.dataGridMateriales.getSelectedRow(), 6).toString());
        idMaterial = t_idMaterial.getText();
    }//GEN-LAST:event_dataGridMaterialesMouseClicked
    private void boton_guardarMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarMaterialMouseClicked
        String idproveedor, nombre, descripcion;
        Float precio_venta, precio_compra;
        Integer stock;
        
        if (idMaterial == "")
            if (validaCamposMateriales())
            {
                con = new ConexionPostgres();
                try{
                    idproveedor = this.t_idProveedorMaterial.getText();
                    nombre = this.t_nombreMaterial.getText();
                    descripcion = this.t_descripcionMaterial.getText();
                    stock = Integer.parseInt(this.t_disponiblesMaterial.getValue().toString());
                    precio_venta = Float.parseFloat(this.t_precioVMaterial.getText());
                    precio_compra = Float.parseFloat(this.t_precioCMaterial.getText());
                    this.con.insertaMaterial(idproveedor, nombre, descripcion, stock, precio_venta, precio_compra);
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaMateriales();
                this.cargaMateriales();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarMaterialMouseClicked
    private void boton_actualizarMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarMaterialMouseClicked
        String idproveedor, nombre, descripcion;
        Float precio_venta, precio_compra;
        Integer stock;
        
        if (idMaterial != "")
            if (validaCamposMateriales())
            {
                con = new ConexionPostgres();
                try{
                    idproveedor = this.t_idProveedorMaterial.getText();
                    nombre = this.t_nombreMaterial.getText();
                    descripcion = this.t_descripcionMaterial.getText();
                    stock = Integer.parseInt(this.t_disponiblesMaterial.getValue().toString());
                    precio_venta = Float.parseFloat(this.t_precioVMaterial.getText());
                    precio_compra = Float.parseFloat(this.t_precioCMaterial.getText());
                    this.con.actualizaMaterial(idMaterial, idproveedor, nombre, descripcion, stock, precio_venta, precio_compra);
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaMateriales();
                this.cargaMateriales();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarMaterialMouseClicked
    private void boton_eliminarMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarMaterialMouseClicked
        if (idMaterial != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaMaterial(idMaterial);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaMateriales();
            this.cargaMateriales();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarMaterialMouseClicked
    private void consultaMateriales(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT M.idmaterial, concat(P.nombres,'_',P.apellidop,'_',P.apellidom) AS proveedor, M.nombre, M.descripcion, M.stock, M.precio_venta, M.precio_compra FROM INSUMO.MATERIAL M, PERSONA.PROVEEDOR P WHERE M.idproveedor = P.idproveedor");
            this.dataGridMateriales.setModel(tablaAux);
            this.limpiarJMateriales();
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cargaMateriales(){
        List<String> descripciones = new ArrayList<String>();
        this.t_descripcionMaterialPedido.removeAllItems();
        procesoCarga = true;
        try{
            con = new ConexionPostgres();
            descripciones = con.listaRegistros("descripcion","descripcion","INSUMO","MATERIAL");
            for(String descripcion : descripciones)
                this.t_descripcionMaterialPedido.addItem(descripcion);
            this.t_descripcionMaterialPedido.setSelectedIndex(-1);
            this.t_idMaterialPedido.setText("");
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        procesoCarga = false;
    }
    /**
     *
     * SERVICIOS 
     * 
     */
    private void cargaEmpleados(){
    List<String> nombreEmpleados = new ArrayList<String>();
        this.t_nombreEmpleadoServicio.removeAllItems();
        procesoCarga = true;
        try{
            con = new ConexionPostgres();
            nombreEmpleados = con.listaRegistros("concat(nombres, '_' ,apellidop, '_', apellidom)","empleado","PERSONA","EMPLEADO");
            for(String nombre : nombreEmpleados)
                this.t_nombreEmpleadoServicio.addItem(nombre);
            this.t_nombreEmpleadoServicio.setSelectedIndex(-1);
            this.t_idEmpleadoServicio.setText("");
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        procesoCarga = false;
    }  
    private void consultaServicios(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT * FROM ADMINISTRACION.SERVICIO");
            this.dataGridServicios.setModel(tablaAux);
            this.limpiarJServicios();
            this.dataGridEmpleadosServicio.setModel(new DefaultTableModel());
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cargaServicios(){
        List<String> descripciones = new ArrayList<String>();
        this.t_descripcionServicioPedido.removeAllItems();
        procesoCarga = true;
        try{
            con = new ConexionPostgres();
            descripciones = con.listaRegistros("descripcion","descripcion","ADMINISTRACION","SERVICIO");
            for(String descripcion : descripciones)
                this.t_descripcionServicioPedido.addItem(descripcion);
            this.t_descripcionServicioPedido.setSelectedIndex(-1);
            this.t_idServicioPedido.setText("");
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        procesoCarga = false;
    }
    private void consultaEmpleadosServicio(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT concat(E.nombres,'_',E.apellidop,'_',apellidom) AS encargados FROM PERSONA.EMPLEADO E, ADMINISTRACION.SERVICIO_EMPLEADO SE WHERE E.idempleado = SE.idempleado AND SE.idservicio = "+this.idServicio);
            this.dataGridEmpleadosServicio.setModel(tablaAux);
            this.t_idEmpleadoServicio.setText("");
            this.t_nombreEmpleadoServicio.setSelectedIndex(-1);
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void limpiarJServicios(){
        this.idServicio = "";
        this.t_idServicio.setText("");
        this.t_tipoServicio.setSelectedIndex(-1);
        this.t_descripcionServicio.setText("");
        this.t_costoServicio.setText("");
        this.limpiarJServiciosEmpleados();
    }
    private void limpiarJServiciosEmpleados(){
        this.t_idEmpleadoServicio.setText("");
        this.t_nombreEmpleadoServicio.setSelectedIndex(-1);
        this.dataGridEmpleadosServicio.setModel(new DefaultTableModel());
    }
    private void boton_limpiarJServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJServiciosMouseClicked
        this.limpiarJServicios();
    }//GEN-LAST:event_boton_limpiarJServiciosMouseClicked
    private void dataGridServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridServiciosMouseClicked
        this.t_idServicio.setText(this.dataGridServicios.getValueAt(this.dataGridServicios.getSelectedRow(), 0).toString());
        this.t_descripcionServicio.setText(this.dataGridServicios.getValueAt(this.dataGridServicios.getSelectedRow(), 1).toString());
        this.t_tipoServicio.setSelectedItem(this.dataGridServicios.getValueAt(this.dataGridServicios.getSelectedRow(), 2).toString());
        this.t_costoServicio.setText(this.dataGridServicios.getValueAt(this.dataGridServicios.getSelectedRow(), 3).toString());
        this.idServicio = t_idServicio.getText();
        this.consultaEmpleadosServicio();
    }//GEN-LAST:event_dataGridServiciosMouseClicked
    private void t_descripcionServicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_descripcionServicioKeyTyped
        this.validaTamanoCampo(this.t_descripcionServicio, evt, 200);
    }//GEN-LAST:event_t_descripcionServicioKeyTyped
    private void boton_guardarServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarServicioMouseClicked
        String descripcion, tiposervicio;
        Float costo;
        
        if (idServicio == "")
            if (validaCamposServicios())
            {
                con = new ConexionPostgres();
                try{
                    descripcion = this.t_descripcionServicio.getText();
                    tiposervicio = this.t_tipoServicio.getSelectedItem().toString();
                    costo = Float.parseFloat(this.t_costoServicio.getText());
                    this.con.insertaServicio(descripcion, tiposervicio, costo);
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaServicios();
                this.cargaServicios();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarServicioMouseClicked
    private void boton_actualizarServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_actualizarServiciosMouseClicked
        String descripcion, tiposervicio;
        Float costo;
        
        if (idServicio != "")
            if (validaCamposServicios())
            {
                con = new ConexionPostgres();
                try{
                    descripcion = this.t_descripcionServicio.getText();
                    tiposervicio = this.t_tipoServicio.getSelectedItem().toString();
                    costo = Float.parseFloat(this.t_costoServicio.getText());
                    this.con.actualizaServicio(idServicio, descripcion, tiposervicio, costo);
                    JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaServicios();
                this.cargaServicios();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_actualizarServiciosMouseClicked
    private void boton_eliminarServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarServiciosMouseClicked
        if (idServicio != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaServicio(idServicio);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            this.consultaServicios();
            this.cargaServicios();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarServiciosMouseClicked
    private void boton_guardarEmpleadoServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_guardarEmpleadoServicioMouseClicked
        if (idServicio != "")
            if (!this.t_idEmpleadoServicio.getText().equals(""))
            {
                con = new ConexionPostgres();
                try{
                    this.con.insertaEmpleadoServicio(idServicio, this.t_idEmpleadoServicio.getText());
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaEmpleadosServicio();
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún empleado", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún servicio", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_guardarEmpleadoServicioMouseClicked
    private void boton_eliminarEmpleadoServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarEmpleadoServicioMouseClicked
        if(this.idServicio != "")
            if (!this.t_idEmpleadoServicio.getText().equals("")){
                con = new ConexionPostgres();
                try{
                    this.con.eliminaEmpleadoServicio(idServicio, this.t_idEmpleadoServicio.getText());
                    JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaEmpleadosServicio();
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún empleado", "Error", JOptionPane.ERROR_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún servicio", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarEmpleadoServicioMouseClicked
    private void t_nombreEmpleadoServicioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t_nombreEmpleadoServicioItemStateChanged
        String idemp="";
        if(!procesoCarga && evt.getStateChange()==1)
        {
            try{
                con = new ConexionPostgres();
                idemp = con.idPersona("idempleado","EMPLEADO",this.t_nombreEmpleadoServicio.getSelectedItem().toString());
                this.t_idEmpleadoServicio.setText(idemp);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
            }
        }        
    }//GEN-LAST:event_t_nombreEmpleadoServicioItemStateChanged
    private void dataGridEmpleadosServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridEmpleadosServicioMouseClicked
        this.t_nombreEmpleadoServicio.setSelectedItem(this.dataGridEmpleadosServicio.getValueAt(this.dataGridEmpleadosServicio.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_dataGridEmpleadosServicioMouseClicked
    /**
     *
     * PEDIDOS
     *
     */
    private void consultaPedidos(){
        try{
            
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT P.idpedido, concat(C.nombres, '_', C.apellidop, '_', C.apellidom) AS cliente, P.fechapedido, P.fechaentrega, P.total \n" +
                "FROM ADMINISTRACION.PEDIDO P, PERSONA.CLIENTE C WHERE P.idcliente = C.idcliente;");
            this.dataGridPedidos.setModel(tablaAux);
            if(idPedido=="" || eliminaReg ){    
                this.limpiarJPedidos();        
                this.dataGridMaterialesPedido.setModel(new DefaultTableModel());
                this.dataGridServiciosPedido.setModel(new DefaultTableModel());
                eliminaReg = false;
            }
            else
                this.t_totalPedido.setText(con.totalPedido(idPedido));
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cargaClientes(){
    /*List<String> nombreClientes = new ArrayList<String>();
        this.t_nombreClientePedido.removeAllItems();
        procesoCarga = true;
        try{
            con = new ConexionPostgres();
            nombreClientes = con.listaRegistros("concat(nombres, '_' ,apellidop, '_', apellidom)","cliente","PERSONA","CLIENTE");
            for(String nombre : nombreClientes)
                this.t_nombreClientePedido.addItem(nombre);
            this.t_nombreClientePedido.setSelectedIndex(-1);
            this.t_idClientePedido.setText("");
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        procesoCarga = false;*/
    }
    private void limpiarJPedidos(){
        this.idPedido = "";
        this.t_idPedido.setText("");
        this.t_idClientePedido.setText("");
        //this.t_nombreClientePedido.setSelectedIndex(-1);
        this.t_fechaPedido.setCalendar(calendario);
        this.t_fechaEntrega.setCalendar(calendario);
        this.t_totalPedido.setText("");
        this.limpiarJPedidosMateriales();
        this.limpiarJPedidosServicios();
    }
    private void limpiarJPedidosMateriales(){
        this.t_idMaterialPedido.setText("");
        this.t_descripcionMaterialPedido.setSelectedIndex(-1);
        this.t_cantidadMaterialPedido.setValue(0);
        this.dataGridMaterialesPedido.setModel(new DefaultTableModel());
    }
    private void limpiarJPedidosServicios(){
        this.t_idServicioPedido.setText("");
        this.t_descripcionServicioPedido.setSelectedIndex(-1);
        this.dataGridServiciosPedido.setModel(new DefaultTableModel());
    }
    
    private void boton_limpiarJPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_limpiarJPedidosMouseClicked
        this.limpiarJPedidos();
    }//GEN-LAST:event_boton_limpiarJPedidosMouseClicked
    private void dataGridPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridPedidosMouseClicked
        this.t_idPedido.setText(this.dataGridPedidos.getValueAt(this.dataGridPedidos.getSelectedRow(), 0).toString());
        //this.t_nombreClientePedido.setSelectedItem(this.dataGridPedidos.getValueAt(this.dataGridPedidos.getSelectedRow(), 1).toString());
        try{
            String pattern = "yyyy-MM-dd";
            String stringfP = this.dataGridPedidos.getValueAt(this.dataGridPedidos.getSelectedRow(), 2).toString();
            String stringfE = this.dataGridPedidos.getValueAt(this.dataGridPedidos.getSelectedRow(), 3).toString();
            this.t_fechaPedido.setDate(new SimpleDateFormat(pattern).parse(stringfP));
            this.t_fechaEntrega.setDate(new SimpleDateFormat(pattern).parse(stringfE));
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
        idPedido = t_idPedido.getText();
        this.consultaPedidos();
        this.consultaMaterialesPedido();
        this.consultaServiciosPedido();
    }//GEN-LAST:event_dataGridPedidosMouseClicked
    private void consultaMaterialesPedido(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT M.descripcion, PM.cantidad FROM INSUMO.MATERIAL M, ADMINISTRACION.PEDIDO_MATERIAL PM WHERE M.idmaterial = PM.idmaterial AND PM.idpedido = "+this.idPedido);
            this.dataGridMaterialesPedido.setModel(tablaAux);
            this.t_idMaterialPedido.setText("");
            this.t_descripcionMaterialPedido.setSelectedIndex(-1);
            this.t_cantidadMaterialPedido.setValue(1);
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void consultaServiciosPedido(){
        try{
            con = new ConexionPostgres();
            this.tablaAux = con.consulta("SELECT S.descripcion FROM ADMINISTRACION.SERVICIO S, ADMINISTRACION.PEDIDO_SERVICIO PS WHERE S.idservicio = PS.idservicio AND PS.idpedido = "+this.idPedido);
            this.dataGridServiciosPedido.setModel(tablaAux);
            this.t_idServicioPedido.setText("");
            this.t_descripcionServicioPedido.setSelectedIndex(-1);
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void boton_generarPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_generarPedidoMouseClicked
        String idclienteP, fechapedido, fechaentrega;
        
        if (idPedido == "")
            if (validaCamposPedidos())
            {
                con = new ConexionPostgres();
                try{
                    idclienteP = this.t_idClientePedido.getText();
                    fechapedido = this.t_fechaPedido.getDateEditor().getDate().toString();
                    fechaentrega = this.t_fechaEntrega.getDateEditor().getDate().toString();
                    this.con.insertaPedido(idclienteP, fechapedido, fechaentrega, new Float("0"));
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
                this.consultaPedidos();
            }
            else
                JOptionPane.showMessageDialog(this, "Favor de completar correctamente todos los campos", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se puede insertar el mismo registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_generarPedidoMouseClicked

    private void boton_eliminarPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarPedidoMouseClicked
        if (idPedido != ""){
            con = new ConexionPostgres();
            try{
                this.con.eliminaPedido(idPedido);
                JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
            }
            eliminaReg = true;
            this.consultaPedidos();
        }
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún registro", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarPedidoMouseClicked

    private void t_descripcionMaterialPedidoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t_descripcionMaterialPedidoItemStateChanged
        String idmat="";
        if(!procesoCarga && evt.getStateChange()==1)
        {
            try{
                con = new ConexionPostgres();
                idmat = con.idMaterial(this.t_descripcionMaterialPedido.getSelectedItem().toString());
                this.t_idMaterialPedido.setText(idmat);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_t_descripcionMaterialPedidoItemStateChanged

    private void t_descripcionServicioPedidoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t_descripcionServicioPedidoItemStateChanged
        String idserv="";
        if(!procesoCarga && evt.getStateChange()==1)
        {
            try{
                con = new ConexionPostgres();
                idserv = con.idServicio(this.t_descripcionServicioPedido.getSelectedItem().toString());
                this.t_idServicioPedido.setText(idserv);
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_t_descripcionServicioPedidoItemStateChanged

    private void dataGridMaterialesPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridMaterialesPedidoMouseClicked
        this.t_descripcionMaterialPedido.setSelectedItem(this.dataGridMaterialesPedido.getValueAt(this.dataGridMaterialesPedido.getSelectedRow(), 0).toString());
        this.t_cantidadMaterialPedido.setValue(Integer.parseInt(this.dataGridMaterialesPedido.getValueAt(this.dataGridMaterialesPedido.getSelectedRow(), 1).toString()));
    }//GEN-LAST:event_dataGridMaterialesPedidoMouseClicked

    private void dataGridServiciosPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridServiciosPedidoMouseClicked
        this.t_descripcionServicioPedido.setSelectedItem(this.dataGridServiciosPedido.getValueAt(this.dataGridServiciosPedido.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_dataGridServiciosPedidoMouseClicked

    private void boton_agregarMaterialPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_agregarMaterialPedidoMouseClicked
        if (idPedido != "")
            if (!this.t_idMaterialPedido.getText().equals(""))
            {    
                con = new ConexionPostgres();
                if(!existeMaterial())
                {
                    try{
                        this.con.insertaMaterialPedido(idPedido, this.t_idMaterialPedido.getText(), Integer.parseInt(this.t_cantidadMaterialPedido.getValue().toString()));
                        JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                        this.consultaClientes();
                        this.consultaMateriales();
                        this.consultaPedidos();
                        this.consultaMaterialesPedido();
                    }
                    catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    int respuesta = JOptionPane.showConfirmDialog(this, "¿Desea reemplazar la cantidad?", "Material previamente registrado", JOptionPane.YES_NO_OPTION);
                    if(respuesta == JOptionPane.YES_OPTION)
                    {
                        try{
                            this.con.actualizaMaterialPedido(idPedido, this.t_idMaterialPedido.getText(), Integer.parseInt(this.t_cantidadMaterialPedido.getValue().toString()));
                            JOptionPane.showMessageDialog(this, "Se ha actualizado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                            this.consultaClientes();
                            this.consultaMateriales();
                            this.consultaPedidos();
                            this.consultaMaterialesPedido();
                        }
                        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al actualizar los datos", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún material", "Datos incorrectos", JOptionPane.ERROR_MESSAGE);    
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún pedido", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_agregarMaterialPedidoMouseClicked

    private void boton_eliminarMaterialPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarMaterialPedidoMouseClicked
        if(this.idPedido != "")
            if (!this.t_idMaterialPedido.getText().equals("")){
                con = new ConexionPostgres();
                try{
                    this.con.eliminaMaterialPedido(idPedido, this.t_idMaterialPedido.getText());
                    JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                    this.consultaClientes();
                    this.consultaMateriales();
                    this.consultaPedidos();
                    this.consultaMaterialesPedido();
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún material", "Error", JOptionPane.ERROR_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún pedido", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarMaterialPedidoMouseClicked

    private void boton_agregarServicioPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_agregarServicioPedidoMouseClicked
        if (idPedido != "")
            if (!this.t_idServicioPedido.getText().equals("")){    
                con = new ConexionPostgres();
                try{
                    this.con.insertaServicioPedido(idPedido, this.t_idServicioPedido.getText());
                    JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                    this.consultaClientes();
                    this.consultaPedidos();
                    this.consultaServiciosPedido();
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al insertar los datos", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún servicio", "Error", JOptionPane.ERROR_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún pedido", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_agregarServicioPedidoMouseClicked

    private void boton_eliminarServicioPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_eliminarServicioPedidoMouseClicked
        if(this.idPedido != "")
            if (!this.t_idServicioPedido.getText().equals("")){
                con = new ConexionPostgres();
                try{
                    this.con.eliminaServicioPedido(idPedido, this.t_idServicioPedido.getText());
                    JOptionPane.showMessageDialog(this, "Se ha eliminado exitosamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
                    this.consultaClientes();
                    this.consultaPedidos();
                    this.consultaServiciosPedido();
                }
                catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al eliminar los datos", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún servicio", "Error", JOptionPane.ERROR_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún pedido", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_boton_eliminarServicioPedidoMouseClicked

    private void boton_buscarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_buscarClienteMouseClicked
        String nombre = this.t_nombreBusqueda.getText();
        if(!nombre.equals("")){
            try{
            con = new ConexionPostgres();
            String sql = "SELECT * FROM PERSONA.CLIENTE WHERE nombres LIKE '%"+nombre+"%'";
            this.tablaAux = con.consulta(sql);
            this.dataGridClientesPedido.setModel(tablaAux);
            //this.limpiarJClientes();
            }
            catch(NumberFormatException | ClassNotFoundException | SQLException ex){
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cargar los datos", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
            dataGridClientesPedido.setModel(new DefaultTableModel());
    }//GEN-LAST:event_boton_buscarClienteMouseClicked

    private void dataGridClientesPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataGridClientesPedidoMouseClicked
        
    }//GEN-LAST:event_dataGridClientesPedidoMouseClicked

    private void t_nombreBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nombreBusquedaKeyTyped
     
    }//GEN-LAST:event_t_nombreBusquedaKeyTyped
    
    /** 
     * 
     * VALIDACIONES
     *
     */
    public boolean existeMaterial(){
        for (int i = 0; i < this.dataGridMaterialesPedido.getRowCount(); i++) 
        {
            String descripcion1  = this.dataGridMaterialesPedido.getValueAt(i, 0).toString().trim();
            String descripcion2 = this.t_descripcionMaterialPedido.getSelectedItem().toString();
            if(descripcion1.equals(descripcion2))
                return true;
        }
        return false;
    }
    public static void validaTamanoCampo(JTextField campo,KeyEvent evt,int numMax){
        if (campo.getText().length()>=numMax)
            evt.consume();
    }
    public static void validaTamanoCampo(JTextArea campo, KeyEvent evt, int numMax){
        if (campo.getText().length()>=numMax)
            evt.consume();
    }
    private boolean validaCamposUsuarios(){
        boolean valido = true;
        if(this.t_usuario.getText().equals("") || this.t_contrasena.getText().equals("") || this.t_privilegio.getSelectedIndex()==-1)
            valido = false;
        return valido;
    }
    private boolean validaCamposEmpleados(){
        boolean valido = true;
        if(this.t_nombresEmpleado.getText().equals("") || this.t_apellidopEmpleado.getText().equals("") || this.t_apellidomEmpleado.getText().equals("") || this.t_calleEmpleado.getText().equals("") || this.t_coloniaEmpleado.getText().equals(""))
            valido = false;
        try{
            Integer.parseInt(this.t_numeroEmpleado.getText());
            Double.parseDouble(this.t_telefonoEmpleado.getText());
            Double.parseDouble(this.t_celularEmpleado.getText());
            Float.parseFloat(this.t_sueldoEmpleado.getText());
        }
        catch(NumberFormatException ex){
            valido = false;
        }
        return valido;
    }            
    private boolean validaCamposClientes(){
        boolean valido = true;
        if(this.t_nombresCliente.getText().equals("") || this.t_apellidopCliente.getText().equals("") || this.t_apellidomCliente.getText().equals("") || this.t_calleCliente.getText().equals("") || this.t_coloniaCliente.getText().equals(""))
            valido = false;
        try{
            Integer.parseInt(this.t_numeroCliente.getText());
            Double.parseDouble(this.t_telefonoCliente.getText());
            Double.parseDouble(this.t_celularCliente.getText());
            Float.parseFloat(this.t_creditoCliente.getText());
        }
        catch(NumberFormatException ex){
            valido = false;
        }
        return valido;
    }
    private boolean validaCamposProveedores(){
        boolean valido = true;
        if(this.t_nombresProveedor.getText().equals("") || this.t_apellidopProveedor.getText().equals("") || this.t_apellidomProveedor.getText().equals("") || this.t_calleProveedor.getText().equals("") || this.t_coloniaProveedor.getText().equals("") || !validaEmail(this.t_emailProveedor.getText()))
            valido = false;
        try{
            Integer.parseInt(this.t_numeroProveedor.getText());
            Double.parseDouble(this.t_telefonoProveedor.getText());
            Double.parseDouble(this.t_celularProveedor.getText());
        }
        catch(NumberFormatException ex){
            valido = false;
        }
        return valido;
    }
    /**
     * 
     * @param email
     * @return 
     */
    public static boolean validaEmail(String email) {
        String PATTERN_EMAIL = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        Pattern pattern = Pattern.compile(PATTERN_EMAIL);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
    private boolean validaCamposMateriales(){
        boolean valido = true;
        if(this.t_idProveedorMaterial.getText().equals("") || this.t_nombreMaterial.getText().equals("") || this.t_descripcionMaterial.getText().equals(""))
            valido = false;
        try{
            Integer.parseInt(this.t_disponiblesMaterial.getValue().toString());
            Float.parseFloat(this.t_precioCMaterial.getText());
            Float.parseFloat(this.t_precioVMaterial.getText());
        }
        catch(NumberFormatException ex){
            valido = false;
        }
        return valido;
    }
    private boolean validaCamposServicios(){
        boolean valido = true;
        if(this.t_tipoServicio.getSelectedIndex()==-1 || this.t_descripcionServicio.getText().equals(""))
            valido = false;
        try{
            Float.parseFloat(this.t_costoServicio.getText());
        }
        catch(NumberFormatException ex){
            valido = false;
        }
        return valido;
    }
    private boolean validaCamposPedidos(){
        boolean valido = true;
        /*if(this.t_nombreClientePedido.getSelectedIndex()==-1)
            valido = false;*/
        return valido;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_actualizarCliente;
    private javax.swing.JButton boton_actualizarEmpleado;
    private javax.swing.JButton boton_actualizarMaterial;
    private javax.swing.JButton boton_actualizarProveedor;
    private javax.swing.JButton boton_actualizarServicios;
    private javax.swing.JButton boton_actualizarUsuario;
    private javax.swing.JButton boton_agregarMaterialPedido;
    private javax.swing.JButton boton_agregarServicioPedido;
    private javax.swing.JButton boton_buscarCliente;
    private javax.swing.JButton boton_eliminarCliente;
    private javax.swing.JButton boton_eliminarEmpleado;
    private javax.swing.JButton boton_eliminarEmpleadoServicio;
    private javax.swing.JButton boton_eliminarMaterial;
    private javax.swing.JButton boton_eliminarMaterialPedido;
    private javax.swing.JButton boton_eliminarPedido;
    private javax.swing.JButton boton_eliminarProveedor;
    private javax.swing.JButton boton_eliminarServicioPedido;
    private javax.swing.JButton boton_eliminarServicios;
    private javax.swing.JButton boton_eliminarUsuario;
    private javax.swing.JButton boton_generarPedido;
    private javax.swing.JButton boton_guardarCliente;
    private javax.swing.JButton boton_guardarEmpleado;
    private javax.swing.JButton boton_guardarEmpleadoServicio;
    private javax.swing.JButton boton_guardarMaterial;
    private javax.swing.JButton boton_guardarProveedor;
    private javax.swing.JButton boton_guardarServicio;
    private javax.swing.JButton boton_guardarUsuario;
    private javax.swing.JButton boton_limpiarJClientes;
    private javax.swing.JButton boton_limpiarJEmpleados;
    private javax.swing.JButton boton_limpiarJMateriales;
    private javax.swing.JButton boton_limpiarJPedidos;
    private javax.swing.JButton boton_limpiarJProveedores;
    private javax.swing.JButton boton_limpiarJServicios;
    private javax.swing.JButton boton_limpiarJUsuarios;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable dataGridClientes;
    private javax.swing.JTable dataGridClientesPedido;
    private javax.swing.JTable dataGridEmpleados;
    private javax.swing.JTable dataGridEmpleadosServicio;
    private javax.swing.JTable dataGridMateriales;
    private javax.swing.JTable dataGridMaterialesPedido;
    private javax.swing.JTable dataGridPedidos;
    private javax.swing.JTable dataGridProveedores;
    private javax.swing.JTable dataGridServicios;
    private javax.swing.JTable dataGridServiciosPedido;
    private javax.swing.JTable dataGridUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel l_cerrarsesion;
    private javax.swing.JTextField t_apellidomCliente;
    private javax.swing.JTextField t_apellidomEmpleado;
    private javax.swing.JTextField t_apellidomProveedor;
    private javax.swing.JTextField t_apellidopCliente;
    private javax.swing.JTextField t_apellidopEmpleado;
    private javax.swing.JTextField t_apellidopProveedor;
    private javax.swing.JTextField t_calleCliente;
    private javax.swing.JTextField t_calleEmpleado;
    private javax.swing.JTextField t_calleProveedor;
    private javax.swing.JSpinner t_cantidadMaterialPedido;
    private javax.swing.JTextField t_celularCliente;
    private javax.swing.JTextField t_celularEmpleado;
    private javax.swing.JTextField t_celularProveedor;
    private javax.swing.JTextField t_coloniaCliente;
    private javax.swing.JTextField t_coloniaEmpleado;
    private javax.swing.JTextField t_coloniaProveedor;
    private javax.swing.JTextField t_contrasena;
    private javax.swing.JTextField t_costoServicio;
    private javax.swing.JTextField t_creditoCliente;
    private javax.swing.JTextField t_descripcionMaterial;
    private javax.swing.JComboBox<String> t_descripcionMaterialPedido;
    private javax.swing.JTextArea t_descripcionServicio;
    private javax.swing.JComboBox<String> t_descripcionServicioPedido;
    private javax.swing.JSpinner t_disponiblesMaterial;
    private javax.swing.JTextField t_emailProveedor;
    private com.toedter.calendar.JDateChooser t_fechaEntrega;
    private com.toedter.calendar.JDateChooser t_fechaPedido;
    private javax.swing.JTextField t_idCliente;
    private javax.swing.JTextField t_idClientePedido;
    private javax.swing.JTextField t_idEmpleado;
    private javax.swing.JTextField t_idEmpleadoServicio;
    private javax.swing.JTextField t_idMaterial;
    private javax.swing.JTextField t_idMaterialPedido;
    private javax.swing.JTextField t_idPedido;
    private javax.swing.JTextField t_idProveedor;
    private javax.swing.JTextField t_idProveedorMaterial;
    private javax.swing.JTextField t_idServicio;
    private javax.swing.JTextField t_idServicioPedido;
    private javax.swing.JTextField t_idUsuario;
    private javax.swing.JTextField t_nombreBusqueda;
    private javax.swing.JComboBox<String> t_nombreEmpleadoServicio;
    private javax.swing.JTextField t_nombreMaterial;
    private javax.swing.JComboBox<String> t_nombreProveedorMaterial;
    private javax.swing.JTextField t_nombresCliente;
    private javax.swing.JTextField t_nombresEmpleado;
    private javax.swing.JTextField t_nombresProveedor;
    private javax.swing.JTextField t_numeroCliente;
    private javax.swing.JTextField t_numeroEmpleado;
    private javax.swing.JTextField t_numeroProveedor;
    private javax.swing.JTextField t_precioCMaterial;
    private javax.swing.JTextField t_precioVMaterial;
    private javax.swing.JComboBox<String> t_privilegio;
    private javax.swing.JTextField t_sueldoEmpleado;
    private javax.swing.JTextField t_telefonoCliente;
    private javax.swing.JTextField t_telefonoEmpleado;
    private javax.swing.JTextField t_telefonoProveedor;
    private javax.swing.JComboBox<String> t_tipoServicio;
    private javax.swing.JTextField t_totalPedido;
    private javax.swing.JTextField t_usuario;
    private javax.swing.JTabbedPane tabControl;
    // End of variables declaration//GEN-END:variables
}
